<!DOCTYPE html>
<html>
<head>
  <title>Binary Options Dashboard</title>
  <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
  <style>
    body { font-family: Arial, sans-serif; text-align: center; margin-top: 20px; }
    h1 { margin-bottom: 10px; }
    .signal { font-size: 28px; font-weight: bold; margin: 10px; }
    .CALL { color: green; }
    .PUT { color: red; }
    .NONE { color: gray; }
    #chart { width: 90%; margin: auto; }
  </style>
</head>
<body>
  <h1>ðŸ“Š Binary Options Signals</h1>
  <div class="signal {{data.signal}}">
    {{ data.signal }} (RSI: {{ data.rsi }})
  </div>

  <div id="chart"></div>
  <div id="rsi_chart"></div>

  <button onclick="refresh()">ðŸ”„ Refresh</button>

  <script>
    function plotCharts(data, rsi) {
      // Extract candle data
      const open = data.map(d => d.open);
      const high = data.map(d => d.high);
      const low  = data.map(d => d.low);
      const close = data.map(d => d.close);

      const x = data.map((_, i) => i);

      // Candle chart
      const candle = {
        x: x,
        open: open,
        high: high,
        low: low,
        close: close,
        type: 'candlestick'
      };

      Plotly.newPlot('chart', [candle], { title: 'Price Candles' });

      // RSI line chart
      const rsiLine = {
        x: x,
        y: rsi,
        type: 'scatter',
        mode: 'lines',
        name: 'RSI'
      };

      const rsiLayout = {
        title: 'RSI Indicator',
        shapes: [
          { type: 'line', x0:0, x1: x.length, y0:70, y1:70, line:{color:"red", dash:"dot"} },
          { type: 'line', x0:0, x1: x.length, y0:30, y1:30, line:{color:"green", dash:"dot"} }
        ]
      };

      Plotly.newPlot('rsi_chart', [rsiLine], rsiLayout);
    }

    function refresh() {
      fetch("/signal")
        .then(res => res.json())
        .then(data => {
          const div = document.querySelector('.signal');
          div.innerText = data.signal + " (RSI: " + data.rsi + ")";
          div.className = "signal " + data.signal;

          const df = data.data;
          const rsiSeries = df.map(d => d.rsi);

          plotCharts(df, rsiSeries);
        });
    }

    // Initial load
    refresh();
  </script>
</body>
</html>
